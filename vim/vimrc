" we are using vim, not vi
set nocompatible

" enable syntax highlighting
syntax on
filetype plugin on
syntax enable

" automatically cd into the directory that the file is in
autocmd BufEnter * execute "chdir ".escape(expand("%:p:h"), ' ')

" remove any trailing whitespace that is in the file
autocmd BufRead,BufWrite * if ! &bin | silent! %s/\s\+$//ge | endif

" restore cursor position to where it was before
augroup JumpCursorOnEdit
   au!
   autocmd BufReadPost *
            \   if expand("<afile>:p:h") !=? $TEMP |
            \       if line("'\"") > 1 && line("'\"") <= line("$") |
            \           let JumpCursorOnEdit_foo = line("'\"") |
            \           let b:doopenfold = 1 |
            \           if (foldlevel(JumpCursorOnEdit_foo) > foldlevel(JumpCursorOnEdit_foo - 1)) |
            \               let JumpCursorOnEdit_foo = JumpCursorOnEdit_foo - 1 |
            \               let b:doopenfold = 2 |
            \           endif |
            \           exe JumpCursorOnEdit_foo |
            \       endif |
            \   endif
   " need to postpone using "zv" until after reading the modelines
   autocmd BufWinEnter *
            \   if exists("b:doopenfold") |
            \       exe "normal zv" |
            \       if(b:doopenfold > 1) |
            \           exe  "+".1 |
            \       endif |
            \       unlet b:doopenfold |
            \   endif
augroup END

" tabs and spaces
set expandtab       " insert space chars whenever TAB is pressed
set tabstop=4       " control the number of space chars inserted when TAB is pressed
set shiftwidth=4    " the number of space characters inserted for indentation
set softtabstop=4   " stop at multiple of 4 when pressing TAB key
retab               " when opening a file, convert tab chars to spaces

" autoindentation
set autoindent
set smartindent

" to disable autoindentation and autocommenting press F7, to enable it back press F8
:nnoremap <F7> :setl formatoptions-=c formatoptions-=r formatoptions-=o noai nocin nosi inde=<CR>
:nnoremap <F8> :setl formatoptions+=c formatoptions+=r formatoptions+=o ai cin si inde=    <CR>

" searching
set incsearch               " incremental search
set ignorecase              " search ignoring case
set hlsearch                " highlight the search
set showmatch               " show matching bracket
set diffopt=filler,iwhite   " ignore all whitespace and sync
:nnoremap <F3> :setl hlsearch!<CR>

" show line numbers
set number

" shows what you are typing as a command
set showcmd

" when a tab is clossed, remove the buffer
set nohidden

" set the colorscheme
colorscheme darkblue

" remember more undos
set undolevels=1000

" we have a fast terminal
set ttyfast

" no bells
set noerrorbells

" enter command mode with ; instead of :
nore ; :

" cursor moves as expected with wrapped lines
map <silent> <Up> gk
imap <silent> <Up> <C-o>gk
map <silent> <Down> gj
imap <silent> <Down> <C-o>gj
map <silent> <home> g<home>
imap <silent> <home> <C-o>g<home>
map <silent> <End> g<End>
imap <silent> <End> <C-o>g<End>
