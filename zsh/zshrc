###########################################################
# General customization
###########################################################

zstyle :compinstall filename '/home/alegen/.zshrc'
autoload -U add-zsh-hook
autoload -Uz compinit
compinit

# word splitting - non alphanumeric chars treated as part of a word
# default is '*?_-.[]~=/&;!#$%^(){}<>'
WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'  # remove /

# No command history
unset HISTFILE
unset HISTSIZE

# Vim mode!
bindkey -v
bindkey "^?" backward-delete-char   # here it depends on which key code the terminal
bindkey "^H" backward-delete-char   # sends so i have both for rxvt and mintty
bindkey "^W" backward-kill-word
bindkey "^U" backward-kill-line

# Colors
autoload -U colors && colors
setopt prompt_subst

# Aliases
alias ls='ls --color=tty'
alias lss='ls --color=tty -Alh'
alias sz='pwd; du -hs . ; for each in * ; do du -hs "$each" ; done'
alias cd..='cd ..'
alias tmux='tmux -2'
alias show-colors='for i in {0..255}; do echo -e "\e[38;05;${i}m${i}"; done | column -c 80 -s " "; echo -e "\e[m"'
alias dhcp='dhclient -r && dhclient'
alias cat='cat -v'

###########################################################
# Environment variables
###########################################################

export ZSH_BINARY=$(which zsh)  # needed for .tmux.common
export GPG_TTY=$(tty)           # needed for gpg-agent; see man page
export EDITOR=vim

###########################################################
# Specific host & user settings outside version control
###########################################################

if [[ -f ~/.zshrc.add ]]; then
    source ~/.zshrc.add
fi

###########################################################
# Functions
###########################################################

# This function permits the command 'lsw $arg' which performs 'ls -l $(which $arg)'
lsw() {
    local w=$(which $1)
    if [[ $w == "$1" ]]; then # if which fails, $w becomes first word in output
        echo "$w not found"
    else
        ls -l $w
    fi
}

# These two functions enable execution of the previous command with sudo in front of it.
save_prev_command() {
    # arguments:
    # $1 line as it was written
    # $2 line with alias expanded and truncated with a certain size limit
    # $3 full line with alias expanded
    if [[ $CURRENT_COMMAND != 'fuck' ]]; then
        PREVIOUS_COMMAND=$CURRENT_COMMAND
    fi
    CURRENT_COMMAND=$2
}
add-zsh-hook preexec save_prev_command

fuck() {
    eval "sudo $PREVIOUS_COMMAND"
}

fw() {
    if [[ $(id -u) == 0 ]]; then
        eval "/root/firewall-$(hostname).sh $@"
    else
        echo 'Only root can manipulate the firewall...'
    fi
}

# This function will add "sudo " before the command when pressing Alt-S
# If using rxvt, make sure the searchable-scrollback extension is removed.
function insert_sudo {
    if [[ $BUFFER != "sudo "* ]]; then
        BUFFER="sudo $BUFFER"
        CURSOR+=5
    fi
}
zle -N insert_sudo_widget insert_sudo
bindkey "^[s" insert_sudo_widget

###########################################################
# gpg-agent-info setup
###########################################################

if [[ -f "$HOME/.gpg-agent-info" ]]; then
    . "$HOME/.gpg-agent-info"
    export GPG_AGENT_INFO
    export SSH_AUTH_SOCK
fi

###########################################################
# The PROMPT variable
###########################################################

if [[ $(id -u) == 0 ]]; then
    COLOR_USER='51'
else
    COLOR_USER='196'
fi
COLOR_EXTRA='118'

if [[ $(hostname) == 'bendis' || $(hostname) == 'heretic' ]]; then
    COLOR_HOST='156'
elif [[ $(hostname) == 'gebeleizis' ]]; then
    COLOR_HOST='227'
elif [[ $(hostname) == 'atlas' ]]; then
    COLOR_HOST='124'
elif [[ $(hostname) == 'stsvm' ]]; then
    COLOR_HOST='208'
elif [[ $(hostname) == 'erra64' || $(hostname) == 'erra86' ]]; then
    COLOR_HOST='201'
elif [[ $(hostname) == 'apozeu' ]]; then
    COLOR_HOST='36'
elif [[ $(hostname) == 'chipotle' ]]; then
    COLOR_HOST='172'
else
    COLOR_HOST='232'
fi

export PROMPT="%F{ $COLOR_USER } %n %F{ $COLOR_EXTRA } @ %F{ $COLOR_HOST } %m %F{ $COLOR_EXTRA }: %~ %f "
export TMUX_COLOR='colour'$COLOR_HOST
