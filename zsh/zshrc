###########################################################
# general customization
###########################################################

if [[ -f ~/.dircolors ]]; then
    eval "export $(dircolors --sh ~/.dircolors)"
fi
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
autoload -U add-zsh-hook
autoload -Uz compinit && compinit

# colors
autoload -U colors && colors
setopt prompt_subst

# auto cd
setopt autocd

# word splitting - non alphanumeric chars treated as part of a word
# default is '*?_-.[]~=/&;!#$%^(){}<>'
WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'  # remove /

# configure history
export HISTFILE="$HOME/.zsh.history"
export HISTSIZE=1000000
export HISTFILESIZE=
export SAVEHIST=$HISTSIZE
setopt inc_append_history share_history
setopt hist_ignore_all_dups
setopt hist_ignore_space
bindkey '^R' history-incremental-search-backward
bindkey '^T' history-incremental-search-forward

# vim mode!
bindkey -v
# for the commands below to work, one needs to be in insert mode and press ctrl-[key]
bindkey "^?" backward-delete-char   # here it depends on which key code the terminal
bindkey "^H" backward-delete-char   # sends so i have both for rxvt and mintty
bindkey "^W" backward-kill-word
bindkey "^U" backward-kill-line

# aliases
alias ls='ls --color=tty'
alias lss='ls --color=tty -Alh'
alias sz='pwd; du -hs . ; for each in * ; do du -hs "$each" ; done'
alias cd..='cd ..'
alias tmux='tmux -2'
alias show-colors='for i in {0..255}; do echo -e "\e[38;05;${i}m${i}"; done | column -c 80 -s " "; echo -e "\e[m"'
alias dhcp='dhclient -r && dhclient'
alias cat='cat -v'

if [[ $(uname -a) =~ ".*Cygwin.*" ]]; then
    alias clear='echo -e "\033c"'
fi

###########################################################
# environment variables
###########################################################

export ZSH_BINARY=$(which zsh)  # needed for .tmux.common
export GPG_TTY=$(tty)           # needed for gpg-agent; see man page
export EDITOR=vim

###########################################################
# specific host & user settings outside version control
###########################################################

if [[ -f ~/.zshrc.add ]]; then
    source ~/.zshrc.add
fi

###########################################################
# functions
###########################################################

# this function permits the command 'lsw $arg' which performs 'ls -l $(which $arg)'
lsw() {
    local w=$(which $1)
    if [[ $w == "$1" ]]; then # if which fails, $w becomes first word in output
        echo "$w not found"
    else
        ls -l $w
    fi
}

# these two functions enable execution of the previous command with sudo in front of it.
save_prev_command() {
    # arguments:
    # $1 line as it was written
    # $2 line with alias expanded and truncated with a certain size limit
    # $3 full line with alias expanded
    if [[ $CURRENT_COMMAND != 'fuck' ]]; then
        PREVIOUS_COMMAND=$CURRENT_COMMAND
    fi
    CURRENT_COMMAND=$2
}
add-zsh-hook preexec save_prev_command

fuck() {
    eval "sudo $PREVIOUS_COMMAND"
}

fw() {
    if [[ $(id -u) == 0 ]]; then
        eval "/root/firewall-$(hostname).sh $@"
    else
        echo 'Only root can manipulate the firewall...'
    fi
}

stopwatch() {
    date_start=$(date +%s)
    while true; do
        echo -ne "$(date -u --date @$(( $(date +%s) - $date_start )) +%H:%M:%S)\r"
    done
}

countdown() {
    if [[ $# == 0 ]]; then
        echo "Usage: countdown [seconds] [ minutes [hours] ]"
        return
    elif [[ $# == 1 ]]; then
        local date_start=$(( $(date +%s) + $1 ))
    elif [[ $# == 2 ]]; then
        local date_start=$(( $(date +%s) + $1 + $2 * 60 ))
    elif [[ $# == 3 ]]; then
        local date_start=$(( $(date +%s) + $1 + $2 * 60 + $3 * 60 * 60 ))
    fi

    while [ $date_start -ge `date +%s` ]; do
        echo -ne "$(date -u --date @$(( $date_start - $(date +%s) )) +%H:%M:%S)\r";
    done
}

# this function will add "sudo " before the command when pressing alt-s
# if using rxvt, make sure the searchable-scrollback extension is removed
function insert_sudo {
    if [[ $BUFFER != "sudo "* ]]; then
        BUFFER="sudo $BUFFER"
        CURSOR+=5
    fi
}
zle -N insert_sudo_widget insert_sudo
bindkey "^[s" insert_sudo_widget

###########################################################
# gpg-agent-info setup
###########################################################

if [[ -f "$HOME/.gpg-agent-info" ]]; then
    . "$HOME/.gpg-agent-info"
    export GPG_AGENT_INFO
    export SSH_AUTH_SOCK
fi

###########################################################
# the PROMPT variable
###########################################################

COLOR_EXTRA='118'

if [[ $(uname -a) =~ ".*Linux.*" ]]; then
    if [[ $(id -u) == 0 ]]; then
        COLOR_USER='51'
    else
        COLOR_USER='196'
    fi

    if [[ $(hostname) == 'bendis' || $(hostname) == 'heretic' ]]; then
        COLOR_HOST='156'
    elif [[ $(hostname) == 'gebeleizis' ]]; then
        COLOR_HOST='227'
    elif [[ $(hostname) == 'atlas' ]]; then
        COLOR_HOST='124'
    elif [[ $(hostname) == 'stsvm' ]]; then
        COLOR_HOST='208'
    elif [[ $(hostname) == 'erra64' || $(hostname) == 'erra86' ]]; then
        COLOR_HOST='201'
    elif [[ $(hostname) == 'apozeu' ]]; then
        COLOR_HOST='36'
    elif [[ $(hostname) == 'homero' ]]; then
        COLOR_HOST='21'
    elif [[ $(hostname) == 'chipotle' ]]; then
        COLOR_HOST='172'
    else
        COLOR_HOST='255'
    fi

    export PROMPT="%F{ $COLOR_USER } %n %F{ $COLOR_EXTRA } @ %F{ $COLOR_HOST } %m %F{ $COLOR_EXTRA }: %~ %f "

elif [[ $(uname -a) =~ ".*Cygwin.*" ]]; then
    if [[ $(id -Gn) =~ '.*Administrators.*' ]]; then
        COLOR_USER='51'
    else
        COLOR_USER='196'
    fi

    COLOR_HOST='118'

    export PROMPT="%F{ $COLOR_USER } %n%F{ $COLOR_EXTRA }: %~ %f "
fi

export TMUX_COLOR='colour'$COLOR_HOST
